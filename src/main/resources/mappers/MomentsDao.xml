<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.service.modules.moments.dao.MomentsDao">
  <resultMap id="BaseResultMap" type="cn.service.modules.moments.model.Moments">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="image_url" jdbcType="VARCHAR" property="imageUrl" />
    <result column="content" jdbcType="VARCHAR" property="content" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="create_date" jdbcType="TIMESTAMP" property="createDate" />
  </resultMap>
  <sql id="Base_Column_List">
    id, image_url, content, user_id, create_date
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from moments
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from moments
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="cn.service.modules.moments.model.Moments">
    insert into moments (id, image_url, content, 
      user_id, create_date)
    values (#{id,jdbcType=INTEGER}, #{imageUrl,jdbcType=VARCHAR}, #{content,jdbcType=VARCHAR}, 
      #{userId,jdbcType=INTEGER}, #{createDate,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="cn.service.modules.moments.model.Moments">
    insert into moments
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="imageUrl != null">
        image_url,
      </if>
      <if test="content != null">
        content,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="createDate != null">
        create_date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="imageUrl != null">
        #{imageUrl,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.service.modules.moments.model.Moments">
    update moments
    <set>
      <if test="imageUrl != null">
        image_url = #{imageUrl,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="createDate != null">
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.service.modules.moments.model.Moments">
    update moments
    set image_url = #{imageUrl,jdbcType=VARCHAR},
      content = #{content,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=INTEGER},
      create_date = #{createDate,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <select id="findList" resultType="cn.service.modules.moments.bean.MomentsBean" parameterType="cn.service.modules.moments.bean.MomentsBean">
      SELECT 
		   m.id, m.image_url as imageUrl, m.content, m.user_id as userId,u.username as userName,u.avatar, m.create_date as createDate
	  FROM moments m
	  INNER JOIN `user` u ON m.user_id=u.id
     <where>
        <if test="userId!=null and userId!=''">
            and m.user_id =#{userId}
        </if>
     </where>
  </select>
  
</mapper>
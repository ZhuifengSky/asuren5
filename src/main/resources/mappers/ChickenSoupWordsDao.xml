<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.service.modules.dailyWords.dao.ChickenSoupWordsDao">
  <resultMap id="BaseResultMap" type="cn.service.modules.dailyWords.model.ChickenSoupWords">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="content" jdbcType="VARCHAR" property="content" />
    <result column="source_website" jdbcType="VARCHAR" property="sourceWebsite" />
    <result column="source_website_url" jdbcType="VARCHAR" property="sourceWebsiteUrl" />
    <result column="create_date" jdbcType="TIMESTAMP" property="createDate" />
    <result column="create_by" jdbcType="INTEGER" property="createBy" />
  </resultMap>
  <sql id="Base_Column_List">
    id, content, source_website, source_website_url, create_date, create_by
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from chicken_soup_words
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from chicken_soup_words
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="cn.service.modules.dailyWords.model.ChickenSoupWords">
    insert into chicken_soup_words (id, content, source_website, 
      source_website_url, create_date, create_by
      )
    values (#{id,jdbcType=INTEGER}, #{content,jdbcType=VARCHAR}, #{sourceWebsite,jdbcType=VARCHAR}, 
      #{sourceWebsiteUrl,jdbcType=VARCHAR}, #{createDate,jdbcType=TIMESTAMP}, #{createBy,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.service.modules.dailyWords.model.ChickenSoupWords">
    insert into chicken_soup_words
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="content != null">
        content,
      </if>
      <if test="sourceWebsite != null">
        source_website,
      </if>
      <if test="sourceWebsiteUrl != null">
        source_website_url,
      </if>
      <if test="createDate != null">
        create_date,
      </if>
      <if test="createBy != null">
        create_by,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="content != null">
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="sourceWebsite != null">
        #{sourceWebsite,jdbcType=VARCHAR},
      </if>
      <if test="sourceWebsiteUrl != null">
        #{sourceWebsiteUrl,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="createBy != null">
        #{createBy,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.service.modules.dailyWords.model.ChickenSoupWords">
    update chicken_soup_words
    <set>
      <if test="content != null">
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="sourceWebsite != null">
        source_website = #{sourceWebsite,jdbcType=VARCHAR},
      </if>
      <if test="sourceWebsiteUrl != null">
        source_website_url = #{sourceWebsiteUrl,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null">
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="createBy != null">
        create_by = #{createBy,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.service.modules.dailyWords.model.ChickenSoupWords">
    update chicken_soup_words
    set content = #{content,jdbcType=VARCHAR},
      source_website = #{sourceWebsite,jdbcType=VARCHAR},
      source_website_url = #{sourceWebsiteUrl,jdbcType=VARCHAR},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      create_by = #{createBy,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="getRandomWords" resultMap="BaseResultMap">
    SELECT id, content FROM `chicken_soup_words`
    WHERE id >= (SELECT floor(RAND() * (SELECT MAX(id) FROM `chicken_soup_words`)))
    ORDER BY id LIMIT 1;
  </select>

</mapper>